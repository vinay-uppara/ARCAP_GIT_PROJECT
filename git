
Git Setup & Configuration commands


| Command                                                   | Description                                            |
| --------------------------------------------------------- | ------------------------------------------------------ |
| `git config --global user.name "Your Name"`               | Set your name for all Git repositories on your system. |
| `git config --global user.email "your.email@example.com"` | Set your email (important for commit attribution).     |
| `git config --global --list`                              | List all global config settings.                       |
| `git config --list`                                       | Show all current configuration (local + global).       |


2. Starting a Project

| Command           | Description                                                |
| ----------------- | ---------------------------------------------------------- |
| `git init`        | Initialize a new Git repository in your project folder.    |
| `git clone <url>` | Clone an existing remote repository to your local machine. |


3.Working with Files
            
	    | Command                       | Description                                                                      |
| ----------------------------- | -------------------------------------------------------------------------------- |
| `git status`                  | Show the status of your working directory (changes staged, unstaged, untracked). |
| `git add <file>`              | Add a file to the staging area.                                                  |
| `git add .`                   | Stage all changes (new, modified, deleted files).                                |
| `git restore <file>`          | Undo changes in the working directory.                                           |
| `git restore --staged <file>` | Unstage a file.                                                                  |

4. Committing Changes

| Command                    | Description                               |
| -------------------------- | ----------------------------------------- |
| `git commit -m "message"`  | Commit the staged changes with a message. |
| `git commit -am "message"` | Add & commit tracked files in one step.   |
| `git log`                  | Show the commit history.                  |
| `git log --oneline`        | Show concise log (commit ID + message).   |
| `git show <commit-id>`     | Show changes in a specific commit.        |


5.Branching & Merging

| Command                  | Description                                         |
| ------------------------ | --------------------------------------------------- |
| `git branch`             | List all local branches.                            |
| `git branch <name>`      | Create a new branch.                                |
| `git checkout <name>`    | Switch to another branch.                           |
| `git switch <name>`      | Alternative to `checkout` for switching branches.   |
| `git switch -c <name>`   | Create and switch to a new branch.                  |
| `git merge <branch>`     | Merge the specified branch into the current branch. |
| `git branch -d <branch>` | Delete a branch.                                    |

6.Working with Remotes

| Command                           | Description                                         |
| --------------------------------- | --------------------------------------------------- |
| `git remote -v`                   | List remote repositories (e.g., `origin`).          |
| `git remote add origin <url>`     | Add a remote repository.                            |
| `git remote set-url origin <url>` | Change the remote URL.                              |
| `git push -u origin <branch>`     | Push a branch and track it on the remote.           |
| `git push`                        | Push changes to the remote repo.                    |
| `git pull`                        | Fetch and merge changes from the remote.            |
| `git fetch`                       | Download changes from the remote (but donâ€™t merge). |

7.Undoing Changes
| Command                  | Description                                              |
| ------------------------ | -------------------------------------------------------- |
| `git reset <file>`       | Unstage a file from the staging area.                    |
| `git reset --hard`       | Remove all local changes permanently.                    |
| `git revert <commit>`    | Revert a specific commit (creates a new commit to undo). |
| `git checkout -- <file>` | Discard changes in the working directory (legacy).       |

